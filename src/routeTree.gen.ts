/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file was automatically generated by TanStack Router.
// You should NOT make any changes in this file as it will be overwritten.
// Additionally, you should also exclude this file from your linter and/or formatter to prevent it from being checked or modified.

import { Route as rootRouteImport } from './routes/__root'
import { Route as IndexRouteImport } from './routes/index'
import { Route as AuthenticatedAppRouteImport } from './routes/_authenticated/app'
import { Route as AuthenticatedAppWalletRouteImport } from './routes/_authenticated/app.wallet'
import { Route as AuthenticatedAppSettingsRouteImport } from './routes/_authenticated/app.settings'
import { Route as AuthenticatedAppLobbyRouteImport } from './routes/_authenticated/app.lobby'
import { Route as AuthenticatedAppGameRulesRouteImport } from './routes/_authenticated/app.game.rules'
import { Route as AuthenticatedAppGameGameIdRouteImport } from './routes/_authenticated/app.game.$gameId'

const IndexRoute = IndexRouteImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => rootRouteImport,
} as any)
const AuthenticatedAppRoute = AuthenticatedAppRouteImport.update({
  id: '/_authenticated/app',
  path: '/app',
  getParentRoute: () => rootRouteImport,
} as any)
const AuthenticatedAppWalletRoute = AuthenticatedAppWalletRouteImport.update({
  id: '/wallet',
  path: '/wallet',
  getParentRoute: () => AuthenticatedAppRoute,
} as any)
const AuthenticatedAppSettingsRoute =
  AuthenticatedAppSettingsRouteImport.update({
    id: '/settings',
    path: '/settings',
    getParentRoute: () => AuthenticatedAppRoute,
  } as any)
const AuthenticatedAppLobbyRoute = AuthenticatedAppLobbyRouteImport.update({
  id: '/lobby',
  path: '/lobby',
  getParentRoute: () => AuthenticatedAppRoute,
} as any)
const AuthenticatedAppGameRulesRoute =
  AuthenticatedAppGameRulesRouteImport.update({
    id: '/game/rules',
    path: '/game/rules',
    getParentRoute: () => AuthenticatedAppRoute,
  } as any)
const AuthenticatedAppGameGameIdRoute =
  AuthenticatedAppGameGameIdRouteImport.update({
    id: '/game/$gameId',
    path: '/game/$gameId',
    getParentRoute: () => AuthenticatedAppRoute,
  } as any)

export interface FileRoutesByFullPath {
  '/': typeof IndexRoute
  '/app': typeof AuthenticatedAppRouteWithChildren
  '/app/lobby': typeof AuthenticatedAppLobbyRoute
  '/app/settings': typeof AuthenticatedAppSettingsRoute
  '/app/wallet': typeof AuthenticatedAppWalletRoute
  '/app/game/$gameId': typeof AuthenticatedAppGameGameIdRoute
  '/app/game/rules': typeof AuthenticatedAppGameRulesRoute
}
export interface FileRoutesByTo {
  '/': typeof IndexRoute
  '/app': typeof AuthenticatedAppRouteWithChildren
  '/app/lobby': typeof AuthenticatedAppLobbyRoute
  '/app/settings': typeof AuthenticatedAppSettingsRoute
  '/app/wallet': typeof AuthenticatedAppWalletRoute
  '/app/game/$gameId': typeof AuthenticatedAppGameGameIdRoute
  '/app/game/rules': typeof AuthenticatedAppGameRulesRoute
}
export interface FileRoutesById {
  __root__: typeof rootRouteImport
  '/': typeof IndexRoute
  '/_authenticated/app': typeof AuthenticatedAppRouteWithChildren
  '/_authenticated/app/lobby': typeof AuthenticatedAppLobbyRoute
  '/_authenticated/app/settings': typeof AuthenticatedAppSettingsRoute
  '/_authenticated/app/wallet': typeof AuthenticatedAppWalletRoute
  '/_authenticated/app/game/$gameId': typeof AuthenticatedAppGameGameIdRoute
  '/_authenticated/app/game/rules': typeof AuthenticatedAppGameRulesRoute
}
export interface FileRouteTypes {
  fileRoutesByFullPath: FileRoutesByFullPath
  fullPaths:
    | '/'
    | '/app'
    | '/app/lobby'
    | '/app/settings'
    | '/app/wallet'
    | '/app/game/$gameId'
    | '/app/game/rules'
  fileRoutesByTo: FileRoutesByTo
  to:
    | '/'
    | '/app'
    | '/app/lobby'
    | '/app/settings'
    | '/app/wallet'
    | '/app/game/$gameId'
    | '/app/game/rules'
  id:
    | '__root__'
    | '/'
    | '/_authenticated/app'
    | '/_authenticated/app/lobby'
    | '/_authenticated/app/settings'
    | '/_authenticated/app/wallet'
    | '/_authenticated/app/game/$gameId'
    | '/_authenticated/app/game/rules'
  fileRoutesById: FileRoutesById
}
export interface RootRouteChildren {
  IndexRoute: typeof IndexRoute
  AuthenticatedAppRoute: typeof AuthenticatedAppRouteWithChildren
}

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/': {
      id: '/'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof IndexRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/_authenticated/app': {
      id: '/_authenticated/app'
      path: '/app'
      fullPath: '/app'
      preLoaderRoute: typeof AuthenticatedAppRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/_authenticated/app/wallet': {
      id: '/_authenticated/app/wallet'
      path: '/wallet'
      fullPath: '/app/wallet'
      preLoaderRoute: typeof AuthenticatedAppWalletRouteImport
      parentRoute: typeof AuthenticatedAppRoute
    }
    '/_authenticated/app/settings': {
      id: '/_authenticated/app/settings'
      path: '/settings'
      fullPath: '/app/settings'
      preLoaderRoute: typeof AuthenticatedAppSettingsRouteImport
      parentRoute: typeof AuthenticatedAppRoute
    }
    '/_authenticated/app/lobby': {
      id: '/_authenticated/app/lobby'
      path: '/lobby'
      fullPath: '/app/lobby'
      preLoaderRoute: typeof AuthenticatedAppLobbyRouteImport
      parentRoute: typeof AuthenticatedAppRoute
    }
    '/_authenticated/app/game/rules': {
      id: '/_authenticated/app/game/rules'
      path: '/game/rules'
      fullPath: '/app/game/rules'
      preLoaderRoute: typeof AuthenticatedAppGameRulesRouteImport
      parentRoute: typeof AuthenticatedAppRoute
    }
    '/_authenticated/app/game/$gameId': {
      id: '/_authenticated/app/game/$gameId'
      path: '/game/$gameId'
      fullPath: '/app/game/$gameId'
      preLoaderRoute: typeof AuthenticatedAppGameGameIdRouteImport
      parentRoute: typeof AuthenticatedAppRoute
    }
  }
}

interface AuthenticatedAppRouteChildren {
  AuthenticatedAppLobbyRoute: typeof AuthenticatedAppLobbyRoute
  AuthenticatedAppSettingsRoute: typeof AuthenticatedAppSettingsRoute
  AuthenticatedAppWalletRoute: typeof AuthenticatedAppWalletRoute
  AuthenticatedAppGameGameIdRoute: typeof AuthenticatedAppGameGameIdRoute
  AuthenticatedAppGameRulesRoute: typeof AuthenticatedAppGameRulesRoute
}

const AuthenticatedAppRouteChildren: AuthenticatedAppRouteChildren = {
  AuthenticatedAppLobbyRoute: AuthenticatedAppLobbyRoute,
  AuthenticatedAppSettingsRoute: AuthenticatedAppSettingsRoute,
  AuthenticatedAppWalletRoute: AuthenticatedAppWalletRoute,
  AuthenticatedAppGameGameIdRoute: AuthenticatedAppGameGameIdRoute,
  AuthenticatedAppGameRulesRoute: AuthenticatedAppGameRulesRoute,
}

const AuthenticatedAppRouteWithChildren =
  AuthenticatedAppRoute._addFileChildren(AuthenticatedAppRouteChildren)

const rootRouteChildren: RootRouteChildren = {
  IndexRoute: IndexRoute,
  AuthenticatedAppRoute: AuthenticatedAppRouteWithChildren,
}
export const routeTree = rootRouteImport
  ._addFileChildren(rootRouteChildren)
  ._addFileTypes<FileRouteTypes>()
